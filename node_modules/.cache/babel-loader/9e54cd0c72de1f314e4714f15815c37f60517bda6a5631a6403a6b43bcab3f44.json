{"ast":null,"code":"import _slicedToArray from\"D:/Programs java python R/React/crocodile-login-app/crocodile-login-Project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import ThirdScreen from\"./ThirdScreen\";import\"./SignIn.css\";import image from\"./image.jpg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ForgotPassword(){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),email=_React$useState2[0],setEmail=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),password=_React$useState4[0],setPassword=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),showThirdScreen=_React$useState6[0],setShowThirdScreen=_React$useState6[1];var _React$useState7=React.useState(\"\"),_React$useState8=_slicedToArray(_React$useState7,2),passwordError=_React$useState8[0],setPasswordError=_React$useState8[1];function handleSubmit(event){event.preventDefault();// validate email and password\nvar isPasswordValid=/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm.test(password);if(!isPasswordValid){alert(\"Password should be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one digit.\");return;}// if valid, show the third screen\nsetShowThirdScreen(true);}function handleChangeEmail(event){setEmail(event.target.value);}function handleChangePassword(event){setPassword(event.target.value);setPasswordError(\"\");}function handleBack(){// reset the form and hide the third screen\nsetEmail(\"\");setPassword(\"\");setPasswordError(\"\");setShowThirdScreen(false);}function handleNewPassword(){}return/*#__PURE__*/_jsxs(\"div\",{className:\"signin-container\",children:[/*#__PURE__*/_jsx(\"img\",{id:\"headimage\",src:image}),/*#__PURE__*/_jsx(\"h2\",{children:\"Reset Password\"}),showThirdScreen?/*#__PURE__*/_jsx(ThirdScreen,{}):/*#__PURE__*/_jsxs(\"form\",{className:\"signin-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:handleChangeEmail})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:handleChangePassword}),passwordError&&/*#__PURE__*/_jsx(\"p\",{children:passwordError})]}),/*#__PURE__*/_jsx(\"button\",{onclick:handleNewPassword,type:\"submit\",children:\"Change\"})]})]});}export default ForgotPassword;","map":{"version":3,"names":["React","ThirdScreen","image","jsx","_jsx","jsxs","_jsxs","ForgotPassword","_React$useState","useState","_React$useState2","_slicedToArray","email","setEmail","_React$useState3","_React$useState4","password","setPassword","_React$useState5","_React$useState6","showThirdScreen","setShowThirdScreen","_React$useState7","_React$useState8","passwordError","setPasswordError","handleSubmit","event","preventDefault","isPasswordValid","test","alert","handleChangeEmail","target","value","handleChangePassword","handleBack","handleNewPassword","className","children","id","src","onSubmit","type","onChange","onclick"],"sources":["D:/Programs java python R/React/crocodile-login-app/crocodile-login-Project/src/ForgotPassword.js"],"sourcesContent":["import React from \"react\";\r\nimport ThirdScreen from \"./ThirdScreen\";\r\nimport \"./SignIn.css\";\r\nimport image from \"./image.jpg\"\r\n\r\nfunction ForgotPassword() {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [showThirdScreen, setShowThirdScreen] = React.useState(false);\r\n  const [passwordError, setPasswordError] = React.useState(\"\");\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    // validate email and password\r\n    const isPasswordValid =\r\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm.test(password);\r\n    if (!isPasswordValid) {\r\n      alert(\r\n        \"Password should be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one digit.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    // if valid, show the third screen\r\n    setShowThirdScreen(true);\r\n  }\r\n\r\n  function handleChangeEmail(event) {\r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  function handleChangePassword(event) {\r\n    setPassword(event.target.value);\r\n    setPasswordError(\"\");\r\n  }\r\n\r\n  function handleBack() {\r\n    // reset the form and hide the third screen\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setPasswordError(\"\");\r\n    setShowThirdScreen(false);\r\n  }\r\n\r\n  function handleNewPassword(){\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"signin-container\">\r\n      <img id = \"headimage\" src={image} />\r\n      <h2>Reset Password</h2>\r\n      {showThirdScreen ? (\r\n        <ThirdScreen />\r\n      ) : (\r\n        <form className=\"signin-form\" onSubmit={handleSubmit}>\r\n          <div className=\"input-container\">\r\n            <label>Username:</label>\r\n            <input type=\"email\" value={email} onChange={handleChangeEmail} />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label>Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n            />\r\n            {passwordError && <p>{passwordError}</p>}\r\n          </div>\r\n          <button onclick={handleNewPassword} type=\"submit\">Change</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}